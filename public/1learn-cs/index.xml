<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>自学CS学习路线图 on 高新 | AI平台开发工程师</title>
    <link>https://mlcore-engine.github.io/1learn-cs/</link>
    <description>Recent content in 自学CS学习路线图 on 高新 | AI平台开发工程师</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 03 Apr 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://mlcore-engine.github.io/1learn-cs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python基础入门</title>
      <link>https://mlcore-engine.github.io/1learn-cs/python-basics/</link>
      <pubDate>Wed, 03 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://mlcore-engine.github.io/1learn-cs/python-basics/</guid>
      <description>&lt;h1 id=&#34;python基础入门&#34;&gt;Python基础入门&lt;/h1&gt;&#xA;&lt;p&gt;Python是一门易学易用的编程语言，非常适合编程初学者。本文将介绍Python的基础知识和学习资源。&lt;/p&gt;&#xA;&lt;h2 id=&#34;为什么选择python作为入门语言&#34;&gt;为什么选择Python作为入门语言&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;语法简洁清晰，易于阅读&lt;/li&gt;&#xA;&lt;li&gt;丰富的库和框架，应用领域广泛&lt;/li&gt;&#xA;&lt;li&gt;活跃的社区和完善的文档&lt;/li&gt;&#xA;&lt;li&gt;在数据科学、AI、Web开发等领域广泛应用&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;推荐学习资源&#34;&gt;推荐学习资源&lt;/h2&gt;&#xA;&lt;h3 id=&#34;在线课程&#34;&gt;在线课程&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;CS50&amp;rsquo;s Introduction to Programming with Python&lt;/strong&gt; - Harvard大学提供的Python入门课程&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Python for Everybody&lt;/strong&gt; - 密歇根大学Charles Severance教授的系列课程&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Automate the Boring Stuff with Python&lt;/strong&gt; - 实用性很强的Python教程&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;书籍&#34;&gt;书籍&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;《Python编程：从入门到实践》&lt;/strong&gt; - Eric Matthes著&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;《流畅的Python》&lt;/strong&gt; - Luciano Ramalho著（进阶）&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;学习路径&#34;&gt;学习路径&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Python基础语法（变量、数据类型、控制流）&lt;/li&gt;&#xA;&lt;li&gt;函数和模块&lt;/li&gt;&#xA;&lt;li&gt;面向对象编程&lt;/li&gt;&#xA;&lt;li&gt;文件处理和异常处理&lt;/li&gt;&#xA;&lt;li&gt;常用库（numpy, pandas等）&lt;/li&gt;&#xA;&lt;li&gt;简单项目实战&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;记住，编程是一项实践技能，多写代码、多做项目是最有效的学习方式。&lt;/p&gt;</description>
    </item>
    <item>
      <title>算法与数据结构</title>
      <link>https://mlcore-engine.github.io/1learn-cs/algorithms/</link>
      <pubDate>Wed, 03 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://mlcore-engine.github.io/1learn-cs/algorithms/</guid>
      <description>&lt;h1 id=&#34;算法与数据结构基础&#34;&gt;算法与数据结构基础&lt;/h1&gt;&#xA;&lt;p&gt;算法和数据结构是计算机科学的核心知识，也是程序员的必备技能。本文介绍如何系统学习算法和数据结构。&lt;/p&gt;&#xA;&lt;h2 id=&#34;为什么算法和数据结构很重要&#34;&gt;为什么算法和数据结构很重要&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;提高解决问题的能力&lt;/li&gt;&#xA;&lt;li&gt;优化程序性能&lt;/li&gt;&#xA;&lt;li&gt;是大多数技术面试的重点&lt;/li&gt;&#xA;&lt;li&gt;培养结构化思维&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;基础数据结构&#34;&gt;基础数据结构&lt;/h2&gt;&#xA;&lt;h3 id=&#34;线性数据结构&#34;&gt;线性数据结构&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;数组&lt;/strong&gt; - 最基础的数据结构&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;链表&lt;/strong&gt; - 单链表、双链表、循环链表&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;栈&lt;/strong&gt; - LIFO（后进先出）&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;队列&lt;/strong&gt; - FIFO（先进先出）&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;非线性数据结构&#34;&gt;非线性数据结构&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;树&lt;/strong&gt; - 二叉树、平衡树、B树&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;图&lt;/strong&gt; - 有向图、无向图&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;堆&lt;/strong&gt; - 最大堆、最小堆&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;哈希表&lt;/strong&gt; - 高效的查找&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;重要算法类型&#34;&gt;重要算法类型&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;排序算法&lt;/strong&gt; - 快速排序、归并排序、堆排序&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;搜索算法&lt;/strong&gt; - 二分查找、深度优先搜索(DFS)、广度优先搜索(BFS)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;动态规划&lt;/strong&gt; - 解决重叠子问题&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;贪心算法&lt;/strong&gt; - 局部最优解&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;分治算法&lt;/strong&gt; - 分解复杂问题&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;学习资源推荐&#34;&gt;学习资源推荐&lt;/h2&gt;&#xA;&lt;h3 id=&#34;书籍&#34;&gt;书籍&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;《算法》&lt;/strong&gt; - Robert Sedgewick &amp;amp; Kevin Wayne著&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;《算法导论》&lt;/strong&gt; - 经典教材，但较为深入&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;《剑指Offer》&lt;/strong&gt; - 面试算法题经典&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;在线课程&#34;&gt;在线课程&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;算法专项课程（Princeton University）&lt;/strong&gt; - Coursera&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;数据结构与算法（UC San Diego）&lt;/strong&gt; - edX&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;刷题平台&#34;&gt;刷题平台&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;LeetCode&lt;/strong&gt; - 最受欢迎的算法练习平台&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;HackerRank&lt;/strong&gt; - 从简单到复杂的编程挑战&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;学习算法最重要的是理解基本思想，并通过大量练习来掌握应用技巧。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
