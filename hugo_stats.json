{
  "htmlElements": {
    "tags": [
      "a",
      "blockquote",
      "body",
      "br",
      "code",
      "control-alt-delete",
      "div",
      "em",
      "footer",
      "h1",
      "h2",
      "h3",
      "h4",
      "h5",
      "h6",
      "head",
      "header",
      "hr",
      "html",
      "i",
      "img",
      "li",
      "link",
      "main",
      "meta",
      "nav",
      "ol",
      "p",
      "pre",
      "script",
      "span",
      "strong",
      "style",
      "table",
      "tbody",
      "td",
      "th",
      "thead",
      "title",
      "tr",
      "ul"
    ],
    "classes": [
      "active",
      "backtothetop",
      "closed",
      "container",
      "content-container",
      "description",
      "edit-meta",
      "fa-arrow-circle-up",
      "fa-arrow-left",
      "fa-arrow-right",
      "fa-circle",
      "fa-fw",
      "fa-github",
      "fa-layers",
      "fab",
      "fas",
      "github",
      "has-sub-menu",
      "highlight",
      "mark",
      "nav",
      "nav-next",
      "nav-prev",
      "opened",
      "pagination",
      "parent",
      "sidebar",
      "sidebar-footer",
      "slide-menu",
      "sub-menu"
    ],
    "ids": [
      "-1-基础操作类",
      "-2-字符统计类",
      "-3-反转与重构类",
      "-4-双指针应用类",
      "-5-模拟类",
      "-6-高级类算法类",
      "-go语言实现字符串题目的知识点图谱",
      "-一什么是量化",
      "-三uint8-vs-int8-的区别",
      "-为什么需要零点偏移",
      "-举个具体例子",
      "-二核心公式对称量化--对零点非零的非对称量化",
      "-四具体简单例子int8-vs-uint8",
      "-常用技巧总结",
      "-总结选-uint8-还是-int8",
      "-总结零点偏移的作用",
      "-每类代表题目详解",
      "-量化公式",
      "-附加补充计算误差",
      "01概念",
      "02bash",
      "0配置阿里yum源",
      "1-125-valid-palindrome有效的回文",
      "1-bradley-terry-模型的背景和公式",
      "1-git-diff",
      "1-ipc-通信方式",
      "1-ipc-通信的基本概念",
      "1-leetcode121-best-time-to-buy-and-sell-stockk--1",
      "1-sortints",
      "1-sortslice",
      "1-sortstable",
      "1-temperature--1默认",
      "1-不要在公共分支上使用",
      "1-丢弃工作区的改动git-restore-文件",
      "1-主对角线转置matrixij--matrixji",
      "1-从极大似然估计角度推导交叉熵",
      "1-传播错误",
      "1-保持提交历史整洁",
      "1-公式的直观解释",
      "1-内存",
      "1-内置类型实现",
      "1-基本用法git-cherry-pick-提交哈希",
      "1-基本用法git-merge-目标分支",
      "1-循环变量捕获",
      "1-忽略文件与刷新缓存",
      "1-插入操作",
      "1-撤销与重置reset",
      "1-最小二乘法least-squares-method",
      "1-最小二乘法与正态分布",
      "1-查看当前节点的网速",
      "1-输入层",
      "1-通用查找sortsearch",
      "1-量化基础理论",
      "1-问题背景回顾",
      "1-频率计数法frequency-counting",
      "10-git-show",
      "10-常见问题与解决方案",
      "101-量化后精度严重下降",
      "102-量化模型推理速度没有提升",
      "103-量化参数选择困难",
      "104-部署相关问题",
      "10stress-工具",
      "11-什么是最小二乘法",
      "11-什么是模型量化",
      "11-浮点与整数表示区别",
      "11-背景与场景",
      "11-背景回归问题",
      "11端口查询",
      "12-route",
      "12-为什么需要量化",
      "12-例子",
      "12-分布假设正态分布误差",
      "12-推导步骤",
      "12-量化的核心scale-与-zero-point",
      "12内网安装mariadb",
      "13-为什么是交叉熵",
      "13-极大似然估计mle",
      "13-深入原理",
      "13-量化的挑战",
      "13安装mysql",
      "13驱动内核",
      "14-优缺点",
      "14-例子验证",
      "14-结论",
      "14df-du-free",
      "15netstat",
      "15路由选择",
      "16rpm",
      "16添加环境变量",
      "18nfs",
      "19安装jdk和maven",
      "1dmesg",
      "1kill命令",
      "1使用-int8-128-127对称量化",
      "1发送信号",
      "1抛硬币",
      "2-392-is-subsequence子序列",
      "2-defer-在循环中",
      "2-git-stash",
      "2-iperf3",
      "2-leetcode122-best-time-to-buy-and-sell-stock-iik--",
      "2-linux-中的-ipc-namespace-隔离",
      "2-sortreverse",
      "2-sortslicestable",
      "2-sortstrings",
      "2-temperature--05低温度",
      "2-上下翻转交换行",
      "2-交叉熵cross-entropy",
      "2-交叉熵与分类分布",
      "2-从信息论角度推导交叉熵",
      "2-例子",
      "2-具体例子抛硬币",
      "2-删除操作",
      "2-取消暂存区的更改git-restore---staged-文件",
      "2-变基rebase",
      "2-合并时处理冲突",
      "2-处理冲突",
      "2-常用-git-命令",
      "2-常用方法",
      "2-摘取多个提交git-cherry-pick-提交1-提交2-",
      "2-整理提交历史",
      "2-映射与模式法mapping-and-patterns",
      "2-类型专用查找",
      "2-自定义类型示例",
      "2-选取浮点范围和整数范围",
      "2-重试机制",
      "2-量化的数学原理",
      "2-隐藏层传输层全连接层",
      "20kill",
      "20shell中正则表达",
      "21-ipcrenderer渲染进程",
      "21-什么是交叉熵",
      "21-后训练量化-ptq",
      "21-浮点范围-以示例为例",
      "21-线性量化的数学表示",
      "21-背景与场景",
      "21-背景二分类问题",
      "211-定义与流程",
      "212-ptq-详细步骤",
      "21linux-网络管理命令",
      "21网络管理与调试",
      "22-ipcmain主进程",
      "22-信息论基础概念",
      "22-分布假设伯努利分布",
      "22-整数范围-以-int8-为例",
      "22-通俗例子",
      "22-量化感知训练-qat",
      "22-量化误差分析",
      "221-定义与思想",
      "221-最大正方形",
      "222-qat-详细步骤",
      "22制作文件系统",
      "23-推导步骤",
      "23-极大似然估计mle",
      "23-深入原理",
      "23-详细计算示例",
      "23kill命令与信号处理",
      "24-为什么是交叉熵",
      "24-优缺点",
      "24-推广到多分类问题",
      "24-文件描述符",
      "25-例子验证",
      "25-结论",
      "25cut",
      "25linux的inotify机制",
      "26crontab",
      "26vmstat",
      "27-firewall-常用操作",
      "28nmap",
      "29linux常用命令",
      "29性能测试",
      "2dd",
      "2linux-signal",
      "2使用-uint80-255非对称量化",
      "2处理信号",
      "2天气预报",
      "2查看系统版本",
      "2磁盘用量和io",
      "2脚本与shell",
      "3-167-two-sum-ii---input-array-is-sorted两数之和-ii---输入数组已排序",
      "3-git-fetch",
      "3-ipc-的其他应用",
      "3-leetcode123-best-time-to-buy-and-sell-stock-iiik--2",
      "3-sortfloat64s",
      "3-temperature--2高温度",
      "3-与-git-merge-的区别",
      "3-公式的意义",
      "3-其他实用技巧",
      "3-切片和映射的零值",
      "3-处理冲突",
      "3-实际开发中的使用方式",
      "3-左右翻转每行逆序",
      "3-强制快进合并git-merge---ff-only",
      "3-总结与对比",
      "3-恢复文件到特定提交git-restore---source提交-文件",
      "3-拣选提交cherry-pick",
      "3-替换操作",
      "3-极大似然估计maximum-likelihood-estimation-mle",
      "3-查找配对或重复法finding-pairs-or-duplicates",
      "3-熵的直观理解",
      "3-解决冲突",
      "3-计算-scale-与-zero_point",
      "3-记录并继续",
      "3-输出层",
      "3-量化方法详解",
      "30linux状态码的意义",
      "31-什么是极大似然估计",
      "31-均匀量化-vs-非均匀量化",
      "31-对称量化-symmetric-quantization",
      "31-异步通信send--on",
      "31-计算-scale",
      "31一些有用的linux命令",
      "32-同步通信invoke--handle",
      "32-对称量化-vs-非对称量化",
      "32-计算-zero_point",
      "32-通俗例子",
      "32-非对称量化-asymmetric-quantization",
      "32tar命令",
      "33-docker-安装-yapi",
      "33-主进程向渲染进程发送消息",
      "33-动态量化详解",
      "33-得到最终参数",
      "33-深入原理",
      "33-逐通道量化-per-channel-quantization",
      "34-优缺点",
      "34-静态量化详解",
      "34软连接",
      "35查看网卡是否为万兆卡",
      "36thread-died-in-berkeley-db-library",
      "37-linux中的中断信号",
      "38core文件",
      "39mlocate文件过大问题",
      "3centos中的tmpfs",
      "3cpu",
      "3tcpdump",
      "3信号类型",
      "4-11-container-with-most-water容器最大容量",
      "4-git-revert",
      "4-leetcode188-best-time-to-buy-and-sell-stock-iv最多-k-次",
      "4-pytorch量化实战",
      "4-temperature--01极低温度",
      "4-与-dpo-算法核心的联系",
      "4-优雅退出",
      "4-其他选项",
      "4-合并分支merge",
      "4-对一组示例浮点数进行量化",
      "4-循环检测法cycle-detection",
      "4-总结",
      "4-最佳实践",
      "4-池化层",
      "4-禁用快进合并git-merge---no-ff",
      "4-进阶操作命令",
      "4-逆时针旋转-90-度转置--上下翻转",
      "40netstat与lsof",
      "41-dpo-的核心思想",
      "41-pytorch量化api概览",
      "41-计算示例-1x---25",
      "41-设定浮点模型",
      "411-浮点前向计算",
      "41iptables",
      "42-bradley-terry-模型在-dpo-中的作用",
      "42-完整的动态量化示例",
      "42-统计权重范围",
      "42-计算示例-2x---10",
      "421-第一层-w1-逐通道量化",
      "422-第二层-w2-逐通道量化",
      "42sed命令",
      "43-dpo-的损失函数",
      "43-计算示例-3x--00",
      "43-量化后推理近似计算",
      "43-静态量化完整流程",
      "43查看磁盘io",
      "44-centos查看用户和用户组",
      "44-post-training量化优化技巧",
      "44-结合-kl-散度",
      "44-计算示例-4x--10",
      "45-创建用户指定家目录",
      "45-计算示例-5x--20",
      "46-iperf-用法",
      "46-计算示例-6x--35",
      "47-bond策略",
      "47-小结浮点--整数-的映射",
      "4mount命令用法和问题",
      "4ss",
      "5-15-3sum三数之和",
      "5-git-blame",
      "5-git-restore",
      "5-leetcode309-best-time-to-buy-and-sell-stock-with-cooldown冷冻期",
      "5-temperature--10极高温度",
      "5-反量化把整数-q-回还成浮点-hatx",
      "5-取消合并git-merge---abort",
      "5-序列检测法sequence-detection",
      "5-总结",
      "5-量化感知训练qat深入",
      "5-顺时针旋转-180-度上下翻转--左右翻转",
      "50-userful-linux-command",
      "51-qat的理论基础",
      "51-反量化-示例-1q---128对应原始-x---25",
      "51-权重-vs-激活-的量化顺序",
      "52-反量化-示例-2q---64对应原始-x---10",
      "52-自定义qat训练循环",
      "52-量化误差来源",
      "53-qat高级技巧",
      "53-反量化-示例-3q---22对应原始-x--00",
      "53-精度-vs-压缩率的权衡",
      "54-反量化-示例-4q--20对应原始-x--10",
      "55-反量化-示例-5q--63对应原始-x--20",
      "56-反量化-示例-6q--127对应原始-x--35",
      "5top",
      "5几个常用的关机命令",
      "5进程控制",
      "6-git-tag",
      "6-leetcode714-best-time-to-buy-and-sell-stock-with-transaction-fee手续费",
      "6-其他命令我不太熟",
      "6-副对角线转置matrixij--matrixn-1-jn-1-i",
      "6-小结零点偏移的作用",
      "6-高级量化技术",
      "61-向量量化vector-quantization",
      "61-梯度校准-calibration",
      "62-product-quantization",
      "62-训练量化参数-learnable-quantization",
      "63-学习型量化",
      "63-量化感知剪枝-prune--quantize",
      "64-二值化和三值化",
      "6lsblk命令",
      "6文件系统",
      "7-git-clean",
      "7-什么是-head",
      "7-扩展为什么-zero_point-有时是正数有时是负数",
      "7-量化调试与优化",
      "71-量化敏感度分析",
      "72-编辑距离",
      "72-量化错误分析",
      "73-量化模型优化",
      "7快捷键",
      "8-git-reflog",
      "8-snat-dnat-masquerade",
      "8-结论",
      "81-量化能否在不精度损失的情况下完成",
      "82-量化位宽可以低于-8-位吗",
      "83-量化后如何部署与硬件支持",
      "84-量化误差量化指标",
      "9-git-remote",
      "9-实际案例分析",
      "91-bert模型量化案例",
      "91-给定浮点数组",
      "92-resnet量化案例",
      "92-计算-scale-与-zero_point",
      "93-yolo目标检测量化案例",
      "93-一一量化",
      "94-反量化",
      "9进程信息区统计信息区域各列含义",
      "MathJax-script",
      "add-node",
      "api-调用示例",
      "backtothetop-fixed",
      "basic-environment",
      "b站是世界上最好的学习平台你英语不太好",
      "c-vs-cpp",
      "calico-yaml",
      "case",
      "channel",
      "chgrpchange-group",
      "chmod-控制用户对文件的权限的命令",
      "chown-设置文件所有者和文件关联组",
      "defer-语句",
      "dockerfile",
      "dpo算法",
      "electron-中的-ipc-通信",
      "epoll机制",
      "fan-infan-out",
      "fdisk",
      "file-types",
      "find命令",
      "flannel-yaml",
      "for-循环",
      "git-crash-course",
      "git-merge-vs-git-rebase",
      "git-rebase-的应用场景",
      "go-demo",
      "go-modules",
      "go-代理设置",
      "go-语言基础知识大全",
      "go-语言实现",
      "go-语言实现-1",
      "go-语言实现-2",
      "go-语言实现-3",
      "go-语言实现-4",
      "golang-代码",
      "golang-示例代码",
      "gomod-文件",
      "good-habit",
      "goroutine",
      "gpu",
      "ha",
      "http-客户端服务器",
      "if-语句",
      "init-master",
      "install-docker",
      "install-kubeadm",
      "install-nvidia-docker2",
      "install-nvidia-driver-for-centos7",
      "iostat",
      "ipc-详细解释",
      "json-处理",
      "keepalived",
      "kl散度",
      "kl散度公式的定义",
      "kubeadm-离线安装包下载",
      "leetcode贯穿职业生涯",
      "linux系统卡顿排查",
      "linux系统管理技术手册",
      "linux进程状态",
      "lsof",
      "master重新加入集群",
      "mount",
      "netstat",
      "nohup用法以及含义",
      "others",
      "panic-和-recover",
      "parted",
      "ping不通几种情况",
      "react-组件示例",
      "regenerate-adminconf",
      "regular-expression",
      "select-语句",
      "softmax-的特点",
      "startup-kernel-sequence",
      "switch-语句",
      "syncmutex",
      "syncrwmutex",
      "syncwaitgroup",
      "tecent-article",
      "temperature",
      "temperature-的作用",
      "top-k-和-top-p-的比较",
      "top-k-采样",
      "top-p-采样",
      "top50",
      "top命令",
      "tsconfigjson-重要配置",
      "typescript-基础教程",
      "typescript-简介",
      "uid和euid",
      "unicode-与-utf-8-的关系",
      "update-core",
      "utf-8-编码规则与原理",
      "一sort-包",
      "一基础操作类",
      "一量化基础概念",
      "七实战技巧汇总",
      "七综合示例完整的量化流程pytorch-风格伪代码",
      "三反转与重构类",
      "三通用切片排序",
      "三量化参数与策略",
      "不同-temperature-的效果",
      "与-dpo-算法核心的联系",
      "专业领域",
      "为什么选择-typescript",
      "举个例子",
      "举个例子-1",
      "举个极端例子",
      "九附简单数值演练再看一次完整量化计算",
      "二基础类型快速排序",
      "二字符统计类",
      "二量化类型与流程",
      "五模拟--构造类",
      "五自定义排序sortinterface",
      "五逐层逐类型量化要点与实践",
      "交互式变基git-rebase--i-提交",
      "交叉类型",
      "什么是-softmax",
      "什么是信息量",
      "从-logits-到-softmax",
      "代码实现",
      "代码示例统计字符数截取字符串与避免乱码",
      "代码组织",
      "代码组织最佳实践",
      "优雅关闭",
      "位运算符",
      "例子",
      "例子-1",
      "例子-1斐波那契数列",
      "例子-20-1-背包问题",
      "信噪比snr分析",
      "信息论角度理解交叉熵",
      "信息量与不确定性的关系",
      "信息量的单位比特",
      "克隆远程仓库",
      "全局声明",
      "八总结与常见问答",
      "公式中各个参数的含义",
      "公式的意义",
      "六二分查找",
      "六更多量化实用技巧",
      "六高级匹配类kmp--rabin-karp--trie",
      "关键注意事项",
      "内存管理",
      "内核含义",
      "内置工具类型",
      "写入文件",
      "函数",
      "函数定义",
      "函数类型",
      "函数类型操作",
      "函数类型进阶",
      "函数重载",
      "切换分支",
      "切片-slice",
      "创建新分支",
      "初始化仓库",
      "删除网桥",
      "删除路由的例子",
      "前提条件",
      "动态规划几个场景问题和理解",
      "动态规划的底层原理",
      "动态规划的本质是什么",
      "动态规划问题的本质",
      "包和模块",
      "包的初始化",
      "包的基本概念",
      "匿名函数和闭包",
      "十结语",
      "升级centos-g",
      "升级centos内核",
      "升级内核",
      "单元测试",
      "参数及其作用",
      "参数含义",
      "参数计算",
      "双指针的常考题型",
      "反射",
      "变量作用域",
      "变量和常量",
      "变量声明的四种方式",
      "各类编码的历史背景与设计动机",
      "合并分支",
      "同步原语",
      "命名空间",
      "命名空间合并",
      "命名规范",
      "哈希表一般解题方法",
      "四一步步示例从前向量化到整数推理",
      "四双指针应用类",
      "四稳定排序与反向排序",
      "困惑还是非常多",
      "在大语言模型微调和采样过程中有几个重要的采样参数需要懂得下面我将讲解三个特别重要的采样参数这3个参数的设置会直接影响模型的表现顺便再解释一下经常看到的一个重要概念logits",
      "在计算机体系架构中动态规划是如何运行的",
      "场景-1公平硬币",
      "场景-1明天是晴天",
      "场景-2不公平硬币",
      "场景-2明天是雨天",
      "均匀量化",
      "基准测试",
      "基本使用",
      "基本原理",
      "基本反射操作",
      "基本数据类型",
      "基本映射关系",
      "基本类型声明",
      "基础是重中之重",
      "基础用法git-rebase-branch",
      "基础类型",
      "基础课",
      "增加白名单",
      "声明文件基础",
      "处理冲突",
      "复合数据类型",
      "复杂度分析",
      "复杂度分析-1",
      "字符与字节的区别",
      "字符串",
      "字符串处理-strings",
      "字符集与字符编码的区别",
      "存储优势",
      "安装python10",
      "安装与使用",
      "实例说明一个字符占多个字节",
      "实战应用",
      "实用工具类型",
      "实际应用",
      "实际应用-1",
      "实际应用-2",
      "实际意义",
      "对于entropy的理解",
      "对称量化实现",
      "导入",
      "导出",
      "嵌入和组合",
      "工作经历",
      "工具和命令",
      "工具类型",
      "布尔类型",
      "常用命令",
      "常用技巧总结",
      "常用标准库",
      "常见原因",
      "常见用法",
      "常见的矩阵变形总结-go实现",
      "常见编码方案简介asciigb2312utf-16utf-32-等",
      "常见问题解决方案",
      "常见陷阱",
      "常量和-iota",
      "并发安全",
      "并发模式",
      "并发编程",
      "应用场景",
      "强制刷新-git-缓存让-gitignore-立即生效",
      "性能优化",
      "性能优化最佳实践",
      "性能优化进阶",
      "总结",
      "总结-1",
      "总结表格",
      "情况-1公平硬币",
      "情况-2不公平硬币",
      "打开文件表",
      "投资机构官网",
      "报道投资机构的网站",
      "拉取远程更新",
      "接口",
      "接口与类型",
      "接口合并",
      "接口定义",
      "接口扩展",
      "控制流程",
      "控制结构",
      "推送到远程仓库",
      "提交更改",
      "操作方法删除路由",
      "教育背景",
      "数值运算",
      "数据库操作",
      "数组",
      "整数类型",
      "文件复制",
      "文件操作",
      "文件系统",
      "方法",
      "方法和接口",
      "时间处理-time",
      "映射-map",
      "更广义的意义",
      "更新证书",
      "更详细的题目总结",
      "最佳实践",
      "最佳实践总结",
      "最大池化",
      "最小二乘法-交叉熵-极大似然估计-推导过程",
      "权重和偏置",
      "权重和偏置-1",
      "权限相关",
      "极端情况完全确定的硬币",
      "查看分支",
      "查看当前状态",
      "查看提交历史",
      "格式化输出",
      "模块",
      "模块声明",
      "模块声明-1",
      "模块系统进阶",
      "模块解析",
      "模型量化概述",
      "正则表达式-regexp",
      "步骤",
      "步骤-1",
      "步骤-1理解--pi--j-",
      "步骤-1计算指数expz_",
      "步骤-1输入层",
      "步骤-2如何计算--alpha-",
      "步骤-2计算指数和",
      "步骤-2隐藏层",
      "步骤-3损失函数",
      "步骤-3计算概率softmax",
      "步骤-3输出层",
      "步骤10配置-github-actions",
      "步骤11提交并推送到-github",
      "步骤1创建-github-仓库",
      "步骤1定义似然函数",
      "步骤1定义真实分布和预测分布",
      "步骤2取对数似然",
      "步骤2安装-hugo",
      "步骤2计算交叉熵",
      "步骤3创建-hugo-站点",
      "步骤3总交叉熵损失",
      "步骤3转化为损失函数",
      "步骤4推广到多分类",
      "步骤4推广到多分类-1",
      "步骤4选择并安装主题",
      "步骤5配置主题",
      "步骤6创建内容",
      "步骤7本地预览",
      "步骤8构建站点",
      "步骤9设置-git-仓库",
      "比赛排名",
      "比较运算符",
      "池化层的作用",
      "池化层的演示",
      "泛型",
      "泛型基础",
      "泛型约束",
      "测试",
      "测试工具",
      "测试文件和比较文件的运算符",
      "浮点值-00",
      "浮点值-30",
      "浮点数和复数",
      "深度学习模型量化完整教程",
      "添加忽略规则",
      "添加文件到暂存区",
      "添加路由的例子",
      "清理-varlogjournal",
      "激活函数",
      "激活函数-1",
      "特点",
      "特点-1",
      "状态定义",
      "状态管理示例",
      "状态转移方程",
      "状态转移的过程本质是什么",
      "环境配置",
      "生产者-消费者",
      "生活化解释",
      "用具体例子理解动态规划",
      "用具体例子解释公式",
      "目录",
      "目录信息",
      "磁盘分区挂载",
      "示例",
      "示例1基本-rebase",
      "示例1快进合并",
      "示例2交互式变基合并提交",
      "示例2合并提交",
      "示例3--git-rebase--i-head4",
      "示例测试",
      "示例特征图",
      "神经网络结构",
      "离线安装教程",
      "私有库配置",
      "第一步计算-scale-和-zero_point",
      "第一步计算概率比",
      "第三步代入公式",
      "第三步反量化回浮点",
      "第二步计算对数使用自然对数",
      "第二步量化示例",
      "简单的例子判断点是否在单位圆内",
      "算术运算符",
      "类",
      "类型优化",
      "类型保护",
      "类型兼容性处理",
      "类型别名",
      "类型声明文件",
      "类型守卫",
      "类型定义",
      "类型定义最佳实践",
      "类型推断与约束",
      "类型操作工具",
      "类型操作符",
      "类型断言",
      "类型断言-1",
      "类型断言和类型开关",
      "类型断言和转换",
      "类型系统",
      "类型系统进阶",
      "类型调试",
      "类型转换工具",
      "类型错误处理",
      "类的基本使用",
      "系统监控",
      "线性组合",
      "线性组合-1",
      "结合-top-k-和-top-p",
      "结合例子",
      "结构体",
      "结构体反射",
      "结果分析",
      "结果解释",
      "结果计算",
      "给非科班同学的建议",
      "继续解释上文中提到的正态分布和伯努利分布",
      "综合示例",
      "编程语言中字符与字节的处理以-go-为例",
      "编译优化",
      "编译选项",
      "编译选项说明",
      "网卡设置为混杂模式",
      "网站导航",
      "网络",
      "联合类型",
      "联系与区别",
      "联系方式",
      "背景",
      "背景语言模型的概率分布",
      "背景语言模型的概率分布-1",
      "自学没成才",
      "自定义工具类型",
      "节点集群间迁移",
      "获取最新动态的建议",
      "装饰器",
      "装饰器基础",
      "装饰器工厂",
      "解释一个上文提到的重要概念",
      "解题思路",
      "解题思路-1",
      "解题思路-2",
      "解题思路-3",
      "解题思路-4",
      "解题步骤",
      "计算优势",
      "计算过程前向传播",
      "访问修饰符",
      "读取文件",
      "调试与测试",
      "资料整理中",
      "输入-logits",
      "输入操作",
      "输入输出",
      "输出概率分布",
      "边界条件",
      "运算符",
      "进程状态",
      "进程的内核保存数据",
      "进程管理",
      "通用-dp-框架",
      "通识课",
      "通道方向",
      "逻辑运算符",
      "部署和容器化",
      "部署脚本",
      "配置与编译",
      "量化误差定义",
      "错误处理",
      "错误处理最佳实践",
      "错误处理策略",
      "错误接口",
      "问题描述",
      "问题描述-1",
      "问题描述-2",
      "问题描述-3",
      "问题描述-4",
      "问题解决",
      "非均匀量化",
      "非对称量化实现",
      "项目介绍",
      "验证-temperature--",
      "高级接口特性",
      "高级类型",
      "高级类型操作",
      "高阶函数"
    ]
  }
}
